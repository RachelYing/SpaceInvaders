#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.6 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 32 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 155 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 0 1
#"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 192 46 214 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 57 89 216 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 102 102 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 249 148 40 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 51 174 51 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 60 194 57 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 151 69 43 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 255 255
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 163 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 192 203
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 166 0 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 50 205 50 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 240 230 140
0 0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 205 92 92 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 158 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 211 72 255 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 150 255 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 13 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 178 34 34 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 116 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 142 28 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 92 -1 93 -1 -1 0 1 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0 0
0 0 -1 -1 0 1 #"\0"
0 75 7 #"Monaco\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monaco CE\0"
0.0 11 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 40 #"framework:syntax-coloring:scheme:symbol\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 41 #"framework:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 40 #"framework:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 42 #"framework:syntax-coloring:scheme:constant\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 41 128 38 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 45 #"framework:syntax-coloring:scheme:parenthesis\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 39 #"framework:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 39 #"framework:syntax-coloring:scheme:other\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 14 #"Html Standard\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 49 #"drscheme:check-syntax:lexically-bound-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 81 112 203 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 42 #"drscheme:check-syntax:imported-identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 68 0 203 0 0
0 -1 -1 2 37 #"profj:syntax-coloring:scheme:keyword\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 39 #"profj:syntax-coloring:scheme:prim-type\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 40 #"profj:syntax-coloring:scheme:identifier\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 36 #"profj:syntax-coloring:scheme:string\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:literal\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 34 139 34 0
0 0 -1 -1 2 37 #"profj:syntax-coloring:scheme:comment\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 35 #"profj:syntax-coloring:scheme:error\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 37 #"profj:syntax-coloring:scheme:default\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 39 #"profj:syntax-coloring:scheme:uncovered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"profj:syntax-coloring:scheme:covered\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 139 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 0 90 90 90 90 0 0 0 0 0 0 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 0 0 0 0
0 0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 21 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1           0 9206 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 192
(
 #"#reader(lib \"htdp-intermediate-lambda-reader.ss\" \"lang\")((modnam"
 #"e assignment8) (read-case-sensitive #t) (teachpacks ()) (htdp-settin"
 #"gs #(#t constructor repeating-decimal #f #t none #f () #f)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 20 #";;;;> Total: 127/170"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;> Summary"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";;> Good uses of local"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;;> General 57/100"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;> Code Style 7/15"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";;> Yellow line -1"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;> 8 typos -4"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;> Unnecessary code -2"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";;> Good design on your \"draw-general\" functions! "
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;> But they need more descriptive names than draw-general1, 2, 3. -"
 #"1"
) 0 0 24 29 1 #"\n"
0 0 17 3 51 #";;> For example, maybe \"draw-item\" and \"draw-list\"."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;> Design Recipe 11/40"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;> Generic list expression not used through most of file, -5"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";;> Failed 1-3 tests depending on gameplay variations, -2"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";;> Inadequate test coverage (on functions that were tested), -13"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;> Black lines, due to unused and untested function move-bullets, -"
 #"3"
) 0 0 24 29 1 #"\n"
0 0 17 3 55 #";;> Total of other errors (not already mentioned above)"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";;> on data defs / signatures / purposes, -6"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;> HOF Use 19/25"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;> Three uses of map"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;> No uses of fold (can use to draw images), -4"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;> Missed 2 uses of or-map, -2"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;> Missed 2 uses of filter"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;> Addressing Comments from Assignment 6 20/20"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;;> Game Functionality 70/70"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;> Lives 20/20"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;> Keeping Score 15/15"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;> Invaders Move 15/15"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;> Mothership 20/20"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; A Moship is a Posn"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; INTERP: represents a mother ship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; A Sbullet is a Posn"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; INTERP: represents a spaceship bullet"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";;> Use generic list expression \"Lof<X>\" for ship bullets and inva"
 #"der bullets. -5"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";; A LoSB is a one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; - empty"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; -(cons Sbullet LoSB)"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; INTERP: represents a list of spaceship bullet"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; A Ibullet is a Posn"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; INTERP: represents an invader bullet"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; A LoIB is a one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";; - empty"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; -(cons Ibullet LoIB)"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; INTERP: represents a list of invader bullet"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 2 #" ("
0 0 14 3 4 #"posn"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; A Invader is a (make-invader Posn NonNegInteger) "
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; INTERP: represent an invader with its position on canvas and its "
 #"id."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 2 #"UP"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"up"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"DOWN"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"down"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";; A Direction is one of"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; -LEFT"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";; -RIGHT"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";; -UP"
0 0 24 29 1 #"\n"
0 0 17 3 8 #";; -DOWN"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;> Missing INTERP -1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 2 #" ("
0 0 14 3 3 #"dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"posn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; A Ship is a (make-ship Direction Posn)"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; INTERP: represents a spaceahip with its moving direction and posi"
 #"tion"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";;         on canvas."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; A Moship is a Posn"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; INTERP: represents a mother ship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; A Tick is a NonNegInteger"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; INTERP: represents the count of ticks in the game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; A Life is a NonNegInteger"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; INTERP: represents the lifes remaining in the game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; A Score is a NonNegInteger"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; INTERP: represents the score in the game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #" ("
0 0 14 3 4 #"ship"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; A World is a (make-world Ship LoI LoIB Moship Life Score)"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; INTERP: Ship represents the spaceship in the game"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;         LoI represents the list of invaders in the game"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";;         LoSB represents the list of spaceship's bulllets in the g"
 #"ame"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";;         LoIB represents the list of invader's bullets in the game"
0 0 24 29 1 #"\n"
0 0 17 3 56 #";;         Moship represents the mother ship in the game"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";;         Tick represents the count of ticks in the game"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";;         Life represents the lifes remaining in the game"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";;         Score represents the score in the game"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;> Typo: \"bulllets\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"SPEED"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 2 #") "
0 0 17 3 58
#";;the moving speed for bullets, spaceship and mother ship."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"TOTAL-INVADERS"
0 0 24 3 1 #" "
0 0 21 3 2 #"36"
0 0 24 3 2 #") "
0 0 17 3 33 #";; there are 36 invaders at start"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 14 #"SOCORE-INVADER"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 17 3 35 #";; the score if you hit one invader"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;> Did you have a typo in this constant name? Did you mean \"SCORE-"
 #"INVADER\"?"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"BONUS"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 17 3 41 #";; bonus score if you hit the mother ship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 17 3 25 #";; invader side in pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 12 #"MOSHIP-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"blue"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"TENSEC"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 17 3 11 #";; 10 ticks"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 2 #") "
0 0 17 3 25 #";; canvas width in pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 2 #") "
0 0 17 3 26 #";; canvas height in pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #"("
0 0 14 3 11 #"empty-scene"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"SHIP-WIDTH"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 17 3 23 #";; ship width in pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"SHIP-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 2 #") "
0 0 17 3 24 #";; ship height in picels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"BULLET-SIDE"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 17 3 24 #";; bullet side in pixels"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"INVADER-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"SHIP-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 9 #"rectangle"
0 0 24 3 1 #" "
0 0 14 3 10 #"SHIP-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 11 #"SHIP-HEIGHT"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 17 #"SHIP-BULLET-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 11 #"BULLET-SIDE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"black"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 20 #"INVADER-BULLET-IMAGE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"square"
0 0 24 3 1 #" "
0 0 14 3 11 #"BULLET-SIDE"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"solid"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"red"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;;; the mothership appears at 30 ticks after games start, by then i"
 #"nvaders has"
) 0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";;;; moved 3 * INVADER-SIDE  (10 tick one INVADER-SIDE long) distanc"
 #"e. Also"
) 0 0 24 29 1 #"\n"
0 0 17 3 54 #";;;; mothership's width should be added to the result."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 15 #"MOTHERSHIP-INIT"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 21 3 2 #"40"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";; mothership will reappear at this position if it flys out of bound"
 #"s"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 11 #"MO-REAPPEAR"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #") "
0 0 21 3 2 #"40"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER3"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER4"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER5"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER6"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER7"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER8"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER9"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER10"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER11"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER12"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER13"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER14"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER15"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER16"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER17"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER18"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"17"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER19"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"18"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER20"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER21"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER22"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"21"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER23"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"22"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER24"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"23"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER25"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER26"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER27"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"26"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER28"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"27"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER29"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"28"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER30"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"29"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER31"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER32"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"31"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER33"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"32"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER34"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"33"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER35"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"34"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER36"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"35"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER1"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER2"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER3"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER4"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER5"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER6"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 8 #"INVADER7"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER8"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER9"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER10"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER11"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER12"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 9 #"INVADER13"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER14"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER15"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER16"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER17"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 9 #"INVADER18"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER19"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER20"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER21"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER22"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 9 #"INVADER23"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER24"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER25"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER26"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER27"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 9 #"INVADER28"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER29"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER30"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER31"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER32"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 9 #"INVADER33"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER34"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER35"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER36"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOIB-INIT"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"MAX-IB"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 17 3 54 #";; the maximum number of invader bullets on the canvas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 6 #"MAX-SB"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 17 3 56 #";; the maximum number of spaceship bullets on the canvas"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"TICK-INIT"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"LIFEMAX"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 9 #"LIFE-INIT"
0 0 24 3 1 #" "
0 0 14 3 7 #"LIFEMAX"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCORE-INIT"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD-INIT"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #" "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 9 #"LOIB-INIT"
0 0 24 3 1 #" "
0 0 14 3 15 #"MOTHERSHIP-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"TICK-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"LIFE-INIT"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCORE-INIT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; life-image: Life -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; GIVEN: current lifes remaining"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; RETURN: an image representation of current life"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"life-image"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 2 #") "
0 0 21 3 2 #"36"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"indigo\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"life-image"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 6           4 4 131
(
 #"(#(struct:translate 10.0 18.0 #(struct:text \"3\" 0 1 \"indigo\" 36 "
 #"#f swiss normal normal #f)) #(struct:bb 20.0 36.0 27.720703125) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";; score-image: Score -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; GIVEN: current score of the game"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; RETURN: an image representation of current score"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"score-image"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"text"
0 0 24 3 2 #" ("
0 0 14 3 14 #"number->string"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"olive\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"score-image"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 2 #") "
0 6           4 4 449
(
 #"(#(struct:overlay #(struct:translate 0 0 #(struct:overlay #(struct:t"
 #"ranslate 0 0 #(struct:translate 5.5 10.0 #(struct:text \"1\" 0 1 \"o"
 #"live\" 20 #f swiss normal normal #f))) #(struct:translate 11.0 0.0 #"
 #"(struct:translate 5.5 10.0 #(struct:text \"0\" 0 1 \"olive\" 20 #f s"
 #"wiss normal normal #f))))) #(struct:translate 22.0 0.0 #(struct:tran"
 #"slate 5.5 10.0 #(struct:text \"0\" 0 1 \"olive\" 20 #f swiss normal "
 #"normal #f)))) #(struct:bb 33.0 20.0 15.400390625) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; draw-world: World -> Image"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; GIVEN: a world"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; RETURN: an image representation of the given world"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"draw-ship"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 8 #"draw-loi"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 9 #"draw-losb"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ("
0 0 14 3 9 #"draw-loib"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-loib"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 11 #"draw-moship"
0 0 24 3 2 #" ("
0 0 14 3 12 #"world-moship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"draw-life"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-life"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 10 #"draw-score"
0 0 24 3 2 #" ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 8 #"))))))))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;;;Tests"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";;> Missing test: the world at some other point in the game. -1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 4 16328
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 230 490 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 20 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 20 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 50"
 #"0) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 40 60 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #"
 #"(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0"
 #" 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:poi"
 #"nt 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 90 60 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poi"
 #"nt 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-"
 #"point 0 0 20 20 0 0) #(struct:pul"
 #"led-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(str"
 #"uct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 5"
 #"00 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:overl"
 #"ay #(struct:translate 140 60 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 "
 #"0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 "
 #"0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(st"
 #"ruct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(stru"
 #"ct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:tr"
 #"anslate 190 60 #(struct:translate 0 0 #(struct:polygon (#(struct:pul"
 #"led-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:"
 #"pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255"
 #" \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0"
 #") #(struct:point 500 0) #(struct:point 500 500) #(struct:point 0 500"
 #")) #(struct:translate 0 0 #(struct:overlay #(struct:translate 240 60"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0"
 #" 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #("
 #"struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:poi"
 #"nt 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(struct:tr"
 #"anslate 0 0 #(struct:overlay #(struct:translate 290 60 #(struct:tran"
 #"slate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(str"
 #"uct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) "
 #"#(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:transla"
 #"te 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(st"
 #"ruct:point 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #("
 #"struct:overlay #(struct:translate 340 60 #(struct:translate 0 0 #(st"
 #"ruct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poi"
 #"nt 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulle"
 #"d-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struc"
 #"t:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500"
 #" 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay"
 #" #(struct:translate 390 60 #(struct:translate 0 0 #(struct:polygon ("
 #"#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 "
 #"0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 "
 #"20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct"
 #":point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 440 60 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pu"
 #"lled-point 0 0 20 20 0 0) #(struct"
 #":pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:poi"
 #"nt 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 40 110 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 2"
 #"0 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #("
 #"struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 90 110 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(str"
 #"uct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0))"
 #" 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:point 0"
 #" 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 14"
 #"0 110 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-po"
 #"int 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 190 110 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20"
 #" 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 500 0"
 #") #(struct:point 500 500) #(struct:point 0 500)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 240 110 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struc"
 #"t:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:po"
 #"int 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 290 110 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) "
 #"#(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 340 110 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #("
 #"struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 "
 #"0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:poin"
 #"t 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 390 110 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled"
 #"-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red"
 #"\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 440 110 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20"
 #" 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 50"
 #"0 0) #(struct:point 500 500) #(struct:point 0 500)) #(struct:transla"
 #"te 0 0 #(struct:overlay #(struct:translate 40 160 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(str"
 #"uct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 "
 #"0 #(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:"
 #"point 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struc"
 #"t:overlay #(struct:translate 90 160 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:cro"
 #"p (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500)"
 #" #(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(st"
 #"ruct:translate 140 160 #(struct:translate 0 0 #(struct:polygon (#(st"
 #"ruct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #"
 #"(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0"
 #" 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:p"
 #"oint 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:poi"
 #"nt 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translat"
 #"e 190 160 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulle"
 #"d-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"re"
 #"d\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(s"
 #"truct:point 500 0) #(struct:point 500 500) #(struct:point 0 500)) #("
 #"struct:translate 0 0 #(struct:overlay #(struct:translate 240 160 #(s"
 #"truct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 "
 #"0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 2"
 #"0 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(stru"
 #"ct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 5"
 #"00 0) #(struct:point 500 500) #(struct:point 0 500)) #(struct:transl"
 #"ate 0 0 #(struct:overlay #(struct:translate 290 160 #(struct:transla"
 #"te 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct"
 #":pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(s"
 #"truct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate "
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struc"
 #"t:point 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 340 160 #(struct:translate 0 0 #(stru"
 #"ct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point"
 #" 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-"
 #"point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:"
 #"crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 5"
 #"00) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #"
 #"(struct:translate 390 160 #(struct:translate 0 0 #(struct:polygon (#"
 #"(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0"
 #") #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 2"
 #"0 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struc"
 #"t:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:"
 #"point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:trans"
 #"late 440 160 #(struct:translate 0 0 #(struct:polygon (#(struct:pulle"
 #"d-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pu"
 #"lled-point 0 0 20 20 0 0) #(struct"
 #":pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #"
 #"(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:poi"
 #"nt 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:o"
 #"verlay #(struct:translate 40 210 #(struct:translate 0 0 #(struct:pol"
 #"ygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 2"
 #"0 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point "
 #"0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop ("
 #"#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #("
 #"struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struc"
 #"t:translate 90 210 #(struct:translate 0 0 #(struct:polygon (#(struct"
 #":pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(str"
 #"uct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0))"
 #" 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point"
 #" 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:point 0"
 #" 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translate 14"
 #"0 210 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-po"
 #"int 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\")"
 #")) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struc"
 #"t:point 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(stru"
 #"ct:translate 0 0 #(struct:overlay #(struct:translate 190 210 #(struc"
 #"t:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0)"
 #" #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20"
 #" 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:t"
 #"ranslate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 500 0"
 #") #(struct:point 500 500) #(struct:point 0 500)) #(struct:translate "
 #"0 0 #(struct:overlay #(struct:translate 240 210 #(struct:translate 0"
 #" 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pul"
 #"led-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struc"
 #"t:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 "
 #"#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:po"
 #"int 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:"
 #"overlay #(struct:translate 290 210 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) "
 #"#(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 340 210 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #("
 #"struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 "
 #"0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:poin"
 #"t 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 390 210 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-po"
 #"int 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled"
 #"-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red"
 #"\"))) #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(st"
 #"ruct:point 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(s"
 #"truct:translate 0 0 #(struct:overlay #(struct:translate 440 210 #(st"
 #"ruct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0"
 #" 0) #(struct:pulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20"
 #" 20 0 0) #(struct:pulled-point 0 0 0 20 0 0)) 255 \"red\"))) #(struc"
 #"t:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 50"
 #"0 0) #(struct:point 500 500) #(struct:point 0 500)) #(struct:transla"
 #"te -80 0 #(struct:overlay #(struct:translate 0 30 #(struct:translate"
 #" 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:p"
 #"ulled-point 0 0 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(str"
 #"uct:pulled-point 0 0 0 20 0 0)) 255 \"blue\"))) #(struct:translate 8"
 #"0 0 #(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struc"
 #"t:point 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(str"
 #"uct:overlay #(struct:translate 10.0 462.0 #(struct:translate 10.0 18"
 #".0 #(struct:text \"3\" 0 1 \"indigo\" 36 #f swiss normal normal #f))"
 #") #(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct"
 #":point 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(struc"
 #"t:translate 0 0 #(struct:overlay #(struct:translate 254.5 10.0 #(str"
 #"uct:translate 5.5 10.0 #(struct:text \"0\" 0 1 \"olive\" 20 #f swiss"
 #" normal normal #f))) #(struct:translate 0 0 #(struct:crop (#(struct:"
 #"point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:po"
 #"int 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:transla"
 #"te 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-poin"
 #"t 0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struct:pulled-"
 #"point 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)) outline"
 #" #(struct:pen \"black\" 2 solid round round)))) #(struct:translate 0"
 #" 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 "
 #"0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struct:pulled-poin"
 #"t 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)) 255 \"white"
 #"\"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #"))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))"
 #")))))))))))))))))))))))))))))))) #(struct:bb 500 500 500.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; draw-general1: [X->Y] [X->Y] X Image Image-> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; GIVEN: two functions that each take an data definition and return"
 #" another "
) 0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";;        data definition, two integers, an element which is going t"
 #"o be put on"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;        canvas, and two images"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURN: a new image that draws current element on the given image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-general1"
0 0 24 3 1 #" "
0 0 14 3 4 #"fun1"
0 0 24 3 1 #" "
0 0 14 3 4 #"fun2"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 1 #" "
0 0 14 3 4 #"imag"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 4 #"imag"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"fun1"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"fun2"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"               "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; draw-ship: Ship Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; GIVEN: a ship and an image"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";; RETURN: a new image that draws the ship on the given image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-ship"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 13 #";;;;Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 26 #";; ship-x: Ship -> Integer"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 21 #";; GIVEN: a spaceship"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 38 #";; RETURN: the x posn of the spaceship"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ship-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"           "
0 0 17 3 13 #";;;;Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 26 #";; ship-y: Ship -> Integer"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 21 #";; GIVEN: a spaceship"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 38 #";; RETURN: the y posn of the spaceship"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ship-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"draw-general1"
0 0 24 3 1 #" "
0 0 14 3 6 #"ship-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"ship-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #" "
0 0 14 3 10 #"SHIP-IMAGE"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-ship"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 4 1069
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 230 490 #(struct:translate 0 0 #(struct:"
 #"polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 "
 #"0 40 0 0 0) #(struct:pulled-point 0 0 40 20 0 0) #(struct:pulled-poi"
 #"nt 0 0 0 20 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 50"
 #"0) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(stru"
 #"ct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #("
 #"struct:pulled-point 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500"
 #" 0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(stru"
 #"ct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:p"
 #"ulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(stru"
 #"ct:pulled-point 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0"
 #")) 255 \"white\")))))))))) #(struct:bb 500 500 500) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";;draw-moship: Moship Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; GIVEN: a moship and an image"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; RETURN: a new image that draws the moship on the given image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-moship"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 13 #"draw-general1"
0 0 24 3 1 #" "
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #" "
0 0 14 3 12 #"MOSHIP-IMAGE"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"draw-moship"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 4 1066
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10 20 #(struct:translate 0 0 #(struct:po"
 #"lygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 "
 #"20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point"
 #" 0 0 0 20 0 0)) 255 \"blue\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) "
 #"#(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:"
 #"pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(str"
 #"uct:pulled-point 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 "
 #"0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struct:"
 #"translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pull"
 #"ed-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struct:"
 #"pulled-point 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)) "
 #"255 \"white\")))))))))) #(struct:bb 500 500 500) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 57 #";; draw-general2: X [X->Y] Integer Integer Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; GIVEN: an element which is going to be put on canvas, a function "
 #"that takes"
) 0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";;        an data definition and returns another data definition, tw"
 #"o integers"
) 0 0 24 29 1 #"\n"
0 0 17 3 57 #";;        which represents posn-x and posn-y,and an image"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; RETURN: a new image that draws current element on the given image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-general2"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 1 #" "
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 3 #"pox"
0 0 24 3 1 #" "
0 0 14 3 3 #"poy"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"place-image"
0 0 24 3 2 #" ("
0 0 14 3 3 #"fun"
0 0 24 3 1 #" "
0 0 14 3 7 #"element"
0 0 24 3 2 #") "
0 0 14 3 3 #"pox"
0 0 24 3 1 #" "
0 0 14 3 3 #"poy"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; draw-life: Life Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; GIVEN: current life and an image"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; RETURN: a new image that draws current life on the given image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-life"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"draw-general2"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #" "
0 0 14 3 10 #"life-image"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"480"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-life"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 4 965
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 10.0 462.0 #(struct:translate 10.0 18.0 "
 #"#(struct:text \"3\" 0 1 \"indigo\" 36 #f swiss normal normal #f))) #"
 #"(struct:translate 0 0 #(struct:crop (#(struct:point 0 0) #(struct:po"
 #"int 500 0) #(struct:point 500 500) #(struct:point 0 500)) #(struct:t"
 #"ranslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:transl"
 #"ate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struc"
 #"t:pulled-point 0 0 500 0 0 0) #(struct:pulled-point 0 0 500 500 0 0)"
 #" #(struct:pulled-point 0 0 0 500 "
 #"0 0)) outline #(struct:pen \"black\" 2 solid round round)))) #(struc"
 #"t:translate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pu"
 #"lled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struc"
 #"t:pulled-point 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)"
 #") 255 \"white\")))))))))) #(struct:bb 500 500 500.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; draw-score: Score Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; GIVEN: current score and an image"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";; RETURN: a new image that draws current score on the given image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-score"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"draw-general2"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 11 #"score-image"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"draw-score"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 4 1283
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 243.5 10.0 #(struct:overlay #(struct:tra"
 #"nslate 0 0 #(struct:overlay #(struct:translate 0 0 #(struct:translat"
 #"e 5.5 10.0 #(struct:text \"1\" 0 1 \"olive\" 20 #f swiss normal norm"
 #"al #f))) #(struct:translate 11.0 0.0 #(struct:translate 5.5 10.0 #(s"
 #"truct:text \"0\" 0 1 \"olive\" 20 #f swiss normal normal #f))))) #(s"
 #"truct:translate 22.0 0.0 #(struct:"
 #"translate 5.5 10.0 #(struct:text \"0\" 0 1 \"olive\" 20 #f swiss nor"
 #"mal normal #f))))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:poin"
 #"t 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struct:pulled-po"
 #"int 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)) outline #"
 #"(struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struct:pulled-point "
 #"0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)) 255 \"white\""
 #")))))))))) #(struct:bb 500 500 500.0) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; draw-general3: LoF<X> [X->Y] [X->Y] Image Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; GIVEN: a list of elemnets, two functions that take an data defini"
 #"tion and"
) 0 0 24 29 1 #"\n"
0 0 17 3 61
#";;       each returns another data definition, and two images"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURN: a new image that draws all the elements in the list on th"
 #"e given"
) 0 0 24 29 1 #"\n"
0 0 17 3 16 #";;         image"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;> Typo: \"elemnets\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"draw-general3"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 1 #" "
0 0 14 3 4 #"fun1"
0 0 24 3 1 #" "
0 0 14 3 4 #"fun2"
0 0 24 3 1 #" "
0 0 14 3 4 #"imag"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #") "
0 0 14 3 3 #"img"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 3 #") ("
0 0 14 3 11 #"place-image"
0 0 24 3 1 #" "
0 0 14 3 4 #"imag"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"fun1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 4 #"fun2"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 13 #"draw-general3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #") "
0 0 14 3 4 #"fun1"
0 0 24 3 1 #" "
0 0 14 3 4 #"fun2"
0 0 24 3 1 #" "
0 0 14 3 4 #"imag"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;> Missed HOF: foldr -1"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; invader-x: Invader -> Integer"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; GIVEN: a invader"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; RETURN: the x posn of the invader"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invader-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"invader-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER1"
0 0 24 3 2 #") "
0 0 21 3 2 #"50"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; invader-y: Invader -> Integer"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; GIVEN: a invader"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; RETURN: the y posn of the invader"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"invader-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invader-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"invader-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER1"
0 0 24 3 2 #") "
0 0 21 3 2 #"70"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; draw-loi: LoI Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; GIVEN: a list of invaders and an image"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURN: a new image that draws all the invaders in the list on th"
 #"e given"
) 0 0 24 29 1 #"\n"
0 0 17 3 16 #";;         image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"draw-loi"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 13 #"draw-general3"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 9 #"invader-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"invader-y"
0 0 24 3 1 #" "
0 0 14 3 13 #"INVADER-IMAGE"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;;Tests pass"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";;> Missing test: killed all the invaders but still have the mothers"
 #"hip"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";;> and some invader bullets and the shop on the canvas. -1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 8 #"draw-loi"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER10"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER35"
0 0 24 3 2 #") "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 4 1463
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 40 110 #(struct:translate 0 0 #(struct:p"
 #"olygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0"
 #" 20 0 0 0) #(struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-poin"
 #"t 0 0 0 20 0 0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop"
 #" (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) "
 #"#(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #(str"
 #"uct:translate 390 210 #(struct:translate 0 0 #(struct:polygon (#(str"
 #"uct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 20 0 0 0) #("
 #"struct:pulled-point 0 0 20 20 0 0) #(struct:pulled-point 0 0 0 20 0 "
 #"0)) 255 \"red\"))) #(struct:translate 0 0 #(struct:crop (#(struct:po"
 #"int 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct:poin"
 #"t 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:translate"
 #" 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point "
 #"0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struct:pulled-po"
 #"int 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)) outline #"
 #"(struct:pen \"black\" 2 solid round round)))) #(struct:translate 0 0"
 #" #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point 0 0 "
 #"0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struct:pulled-point "
 #"0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)) 255 \"white\""
 #")))))))))))))) #(struct:bb 500 500 500) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; draw-losb:  LoSB Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 50 #";; GIVEN: a list of spaceship bullets and an image"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; RETURN: a new image that draws all the spaceship bullets in the l"
 #"ist on the"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";;         given image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-losb"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"draw-general3"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 17 #"SHIP-BULLET-IMAGE"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;> Missing test: Empty LoSB. -1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-losb"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"389"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 3 #")) "
0 0 14 3 10 #"BACKGROUND"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 6           4 4 1468
(
 #"(#(struct:crop (#(struct:point 0 0) #(struct:point 500 0) #(struct:p"
 #"oint 500 500) #(struct:point 0 500)) #(struct:translate 0 0 #(struct"
 #":overlay #(struct:translate 297/2 775/2 #(struct:translate 0 0 #(str"
 #"uct:polygon (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-poin"
 #"t 0 0 3 0 0 0) #(struct:pulled-point 0 0 3 3 0 0) #(struct:pulled-po"
 #"int 0 0 0 3 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct:c"
 #"rop (#(struct:point 0 0) #(struct:point 500 0) #(struct:point 500 50"
 #"0) #(struct:point 0 500)) #(struct:translate 0 0 #(struct:overlay #("
 #"struct:translate 197/2 197/2 #(struct:translate 0 0 #(struct:polygon"
 #" (#(struct:pulled-point 0 0 0 0 0 0) #(struct:pulled-point 0 0 3 0 0"
 #" 0) #(struct:pulled-point 0 0 3 3 0 0) #(struct:pulled-point 0 0 0 3"
 #" 0 0)) 255 \"black\"))) #(struct:translate 0 0 #(struct:crop (#(stru"
 #"ct:point 0 0) #(struct:point 500 0) #(struct:point 500 500) #(struct"
 #":point 0 500)) #(struct:translate 0 0 #(struct:overlay #(struct:tran"
 #"slate 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-p"
 #"oint 0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struct:pull"
 #"ed-point 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)) outl"
 #"ine #(struct:pen \"black\" 2 solid round round)))) #(struct:translat"
 #"e 0 0 #(struct:translate 0 0 #(struct:polygon (#(struct:pulled-point"
 #" 0 0 0 0 0 0) #(struct:pulled-point 0 0 500 0 0 0) #(struct:pulled-p"
 #"oint 0 0 500 500 0 0) #(struct:pulled-point 0 0 0 500 0 0)) 255 \"wh"
 #"ite\")))))))))))))) #(struct:bb 500 500 500) #f)"
) 0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;;; Signature ;;> Missing the function name. -1"
0 0 24 29 1 #"\n"
0 0 17 3 22 #";; LoIB Image -> Image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; GIVEN: a list of invader bullets and an image"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; RETURN: a new image that draws all the invader bullets in the lis"
 #"t on the"
) 0 0 24 29 1 #"\n"
0 0 17 3 22 #";;         given image"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"draw-loib"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"draw-general3"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #" "
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 20 #"INVADER-BULLET-IMAGE"
0 0 24 3 1 #" "
0 0 14 3 3 #"img"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;;; Tests pass"
0 0 24 29 1 #"\n"
0 0 17 3 2 #";("
0 0 17 3 12 #"check-expect"
0 0 17 3 2 #" ("
0 0 17 3 9 #"draw-loib"
0 0 17 3 2 #" ("
0 0 17 3 4 #"list"
0 0 17 3 2 #" ("
0 0 17 3 9 #"make-posn"
0 0 17 3 1 #" "
0 0 17 3 2 #"10"
0 0 17 3 1 #" "
0 0 17 3 54 #"30) (make-posn 50 70) (make-posn 100 40)) BACKGROUND))"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;> I uncommented this test and you were missing a closing paren. -1"
0 0 24 29 1 #"\n"
0 0 17 3 86
(
 #";;> I added it and got \"check-expect: expects 2 arguments, but foun"
 #"d only 1\" error. -1"
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;> Missing test: Empty LoIB. -1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;;; Signature "
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; posn-out-of-bounds : Posn -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; GIVEN: a posn"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURN: true if the posn is out of bounds of the canvas, false ot"
 #"herwise"
) 0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"posn-out-of-bounds"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 2 #") "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 5 #"point"
0 0 24 3 2 #") "
0 0 14 3 6 #"HEIGHT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"posn-out-of-bounds"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"posn-out-of-bounds"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"posn-out-of-bounds"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"-20"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"posn-out-of-bounds"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"posn-out-of-bounds"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;;; Signature "
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; ship-reach-bounds? : Ship -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; GIVEN: a ship "
0 0 24 29 1 #"\n"
0 0 17 3 59
#";; RETURN: true if the ship reaches bounds, false otherwise"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; I make it to be\"reach bounds\" when the ship is SHIP-WIDTH/2 awa"
 #"y from the"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";;  bounds"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";;> OK, it is good that you included this information but it belongs"
 #" in the purpose."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ship-reach-bounds?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ship-dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"<="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 3 #")) "
0 0 14 3 10 #"SHIP-WIDTH"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ship-dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 2 #"  "
0 0 14 3 10 #"SHIP-WIDTH"
0 0 24 3 5 #" ))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 4 #"])) "
0 0 17 3 24 #";;> Unnecessary code, -1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;;;Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ship-reach-bounds?"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ship-reach-bounds?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"-1"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ship-reach-bounds?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; invaders-move: LoI Tick -> LoI"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; GIVEN: a list of invades and a tick(NonNegtiveInt)"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; RETURN:the invader which has moved SPEED distance from the former"
 #" position "
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"invaders-move"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 4 #")) ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 6 #"modulo"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 1 #" "
0 0 14 3 6 #"TENSEC"
0 0 24 3 5 #"))) ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 12 #"move-invader"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;;; Test"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"invaders-move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER1"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER2"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER5"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; move-invader: Invader -> Invader"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";; GIVEN: an invader"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; RETURN:the  invader which has moved SPEED distance from the forme"
 #"r position"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"move-invader"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invader-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invader-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 10 #"invader-id"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"move-invader"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER16"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"140"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; move-spaceship: Ship -> Ship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;;; Purpose:"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; GIVEN: a ship"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; RETURN: the ship after it moves SPEED(10) pixels to right"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-spaceship"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 31 #";; new-ship-right: Ship -> Ship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 13 #";;;; Purpose:"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 21 #";; GIVEN: a spaceship"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 69
(
 #";; RETURN: a spaceship which has moved right SPEED distance from its"
 #" "
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 26 #";;         former position"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"new-ship-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"make-ship"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ship-dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"SPEED"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 30 #";; new-ship-left: Ship -> Ship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 13 #";;;; Purpose:"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 21 #";; GIVEN: a spaceship"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 68
#";; RETURN: a spaceship which has moved left SPEED distance from its "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 26 #";;         former position"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"new-ship-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-ship"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ship-dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 3 #")) "
0 0 14 3 5 #"SPEED"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ship-reach-bounds?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 5 #"RIGHT"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ship-dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 4 #")) ("
0 0 14 3 14 #"new-ship-right"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 8 #"symbol=?"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ship-dir"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 4 #")) ("
0 0 14 3 13 #"new-ship-left"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 4 #")])]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 18 #"ship-reach-bounds?"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 2 #") "
0 0 14 3 4 #"ship"
0 0 24 3 4 #"])))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-spaceship"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-spaceship"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 14 3 4 #"LEFT"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"left"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; ship-reappear-mov: LoIB Ship -> Ship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; GIVEN: a list of invader bullets and a spaceship"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; WHERE: if the ship is hit, it reappears at the cennter bottom of "
 #"canvas"
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";;        if not, it keeps removing"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; RETURN: a ship in new location"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ship-reappear-move"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"ship-hitted?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 2 #") "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"move-spaceship"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ship-reappear-move"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 3 #")) "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ship-reappear-move"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOIB-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";; move-bullets: LoF<X> [X->X] -> LoF<X>"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; GIVEN: a list of elements and a function thats take a data defini"
 #"tion and"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";;        returns the same data definition"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;> Typo: \"thats take\" - you meant \"that takes\""
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; RETURN: a new list of elements same as before"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"move-bullets"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 1 #" "
0 0 14 3 3 #"fun"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #") "
0 0 14 3 3 #"lox"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #")("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 3 #"fun"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 4 #"))) "
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 12 #"move-bullets"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #") "
0 0 14 3 3 #"fun"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";;> No tests? And black lines here. -3"
0 0 24 29 1 #"\n"
0 0 17 3 66
#";;> You started to use a generic function here for moving bullets,"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;> and you were definitely on the right track there, but then you c"
 #"hanged"
) 0 0 24 29 1 #"\n"
0 0 17 3 49 #";;> your approach. Should rewrite this to use map"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; move-spaceship-bullets: LoSB -> LoSB"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; GIVEN: a list of spaceship bullets"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; RETURN: a new list of spaceship bullets in which each bullet's po"
 #"sition"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";;         is updated"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 22 #"move-spaceship-bullets"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 30 #";; move-up: Sbullet -> Sbullet"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 28 #";; GIVEN: a spaceship bullet"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 68
#";; RETURN: a spaceship bullet which has moved up SPEED distance from"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 26 #";;         former position"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"move-up"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 2 #")("
0 0 14 3 1 #"-"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 2 #") "
0 0 14 3 5 #"SPEED"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 7 #"move-up"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 22 #"move-spaceship-bullets"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 29 #")))                          "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"190"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; move-invader-bullets: LoIB -> LoIB"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; GIVEN:  a list of invader bullets"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; RETURN: a new list of invader bullets in which each bullet's posi"
 #"tion"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";;         is updated"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"move-invader-bullets"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 30 #";; move-up: Ibullet -> Ibullet"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 27 #";; GIVEN: an invader bullet"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 69
(
 #";; RETURN: an invader bullet which has moved down SPEED distance fro"
 #"m"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 26 #";;         former position"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"move-down"
0 0 24 3 1 #" "
0 0 14 3 7 #"ibullet"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 7 #"ibullet"
0 0 24 3 2 #")("
0 0 14 3 1 #"+"
0 0 24 3 3 #"  ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 7 #"ibullet"
0 0 24 3 2 #") "
0 0 14 3 5 #"SPEED"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 24 3 1 #" "
0 0 14 3 9 #"move-down"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"move-invader-bullets"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 4 #"))) "
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"60"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; bullet-max?: LoF<X> NonNegInteger -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; GIVEN: a list of elements and a NonNegInteger"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; RETURN: true if the number of elements in the list is bigger than"
 #" the"
) 0 0 24 29 1 #"\n"
0 0 17 3 35 #";;         integer; otherwise false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bullet-max?"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 1 #" "
0 0 14 3 3 #"max"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 1 #" "
0 0 14 3 3 #"lox"
0 0 24 3 2 #") "
0 0 14 3 3 #"max"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";; ibullet-max?: LoIB -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";; GIVEN: a list of invader bullets"
0 0 24 29 1 #"\n"
0 0 17 3 67
#";; RETURN: true if the number of bullets in the list is bigger than"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";;         MAX-IB; otherwise false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ibullet-max?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 8 #")       "
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 11 #"bullet-max?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #" "
0 0 14 3 6 #"MAX-IB"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ibullet-max?"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOIB-INIT"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; invaders-fire: LoI LoIB -> LoIB"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; GIVEN: a list of invaders and a list of invader bullets"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";; RETURN: a new list of invader bullets which add one invader bulle"
 #"t to the"
) 0 0 24 29 1 #"\n"
0 0 17 3 68
#";;         original list when there are less than 10 invader bullets"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"invaders-fire"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 32 #";; new-invader-fire: LoI -> Posn"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 28 #";; GIVEN: a list of invaders"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 69
(
 #";; RETURN: a posn of one invader that is chose randomly from the lis"
 #"t"
) 0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"new-invader-fire"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 12 #"invader-posn"
0 0 24 3 2 #" ("
0 0 14 3 12 #"find-invader"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #" ("
0 0 14 3 11 #"id-generate"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 1 #" "
0 0 21 3 2 #"35"
0 0 24 3 2 #") "
0 0 14 3 3 #"loi"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"ibullet-max?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 2 #") "
0 0 14 3 4 #"loib"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 16 #"new-invader-fire"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 4 #"loib"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;;; Tests "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-random"
0 0 24 3 2 #" ("
0 0 14 3 13 #"invaders-fire"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER1"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER2"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"30"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; find-invader: LoI Id -> Invader"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; GIVEN: a list of invaders and a id (NonNegInteger)"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; RETURN: a invader that matchs the id"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"find-invader"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 10 #"invader-id"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 5 #"))) ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 12 #"find-invader"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 2 #"id"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"find-invader"
0 0 24 3 1 #" "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #") ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; id-generate: Id LoI -> Id"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; GIVEN: an id and a list of invaders"
0 0 24 29 1 #"\n"
0 0 17 3 63
#";; RETURN: an id which is chose randomly from the invaders' ids"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"id-generate"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 35 #";; invader-exist?: LoI Id-> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 38 #";; GIVEN: a list of invaders and an id"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 69
(
 #";; RETURN: true if the invader that matchs the id exists in the list"
 #";"
) 0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 27 #";;         otherwise false."
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"invader-exist?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #" ("
0 0 14 3 10 #"invader-id"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 14 #"invader-exist?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 2 #"id"
0 0 24 3 7 #")])])))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 14 #"invader-exist?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #" "
0 0 14 3 2 #"id"
0 0 24 3 2 #") "
0 0 14 3 2 #"id"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"id-generate"
0 0 24 3 2 #" ("
0 0 14 3 6 #"random"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 14 #"TOTAL-INVADERS"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 14 3 3 #"loi"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"id-generate"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 8 #"INVADER2"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER12"
0 0 24 3 3 #")) "
0 0 21 3 2 #"11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"id-generate"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #" "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; ship-fire: LoSB Ship -> LoSB"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; GIVEN: a list of spaceship bullets and a spaceship"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; RETURN: a new list of spaceship bullets which add one spaceship b"
 #"ullet to "
) 0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";;         the original list when there are less than 3 spaceship bu"
 #"llets"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-fire"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 32 #";; sbullet-max?: LoSB -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 37 #";; GIVEN: a list of spaceship bullets"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 67
#";; RETURN: true if the number of bullets in the list is bigger than"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 34 #";;         MAX-SB; otherwise false"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"sbullet-max?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 11 #"bullet-max?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"MAX-SB"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 12 #"sbullet-max?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 14 3 4 #"losb"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 2 #") "
0 0 14 3 4 #"losb"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-fire"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")) "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-fire"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")) "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-fire"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 3 #") ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; general-hit?: X Y NonNegInteger1 NonNegInteger2 [X->Y] [X->Y] -> "
 #"Boolean"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; GIVEN: two data definitions (X and Y),  two NonNegIntegers, two f"
 #"unctions "
) 0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;        that each take an data definition and return another data "
 #"definition, "
) 0 0 24 29 1 #"\n"
0 0 17 3 63
#";; RETURN: true if element2 is hit by element1, otherwise false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"general-hit?"
0 0 24 3 1 #" "
0 0 14 3 8 #"element1"
0 0 24 3 1 #" "
0 0 14 3 8 #"element2"
0 0 24 3 1 #" "
0 0 14 3 8 #"measure1"
0 0 24 3 1 #" "
0 0 14 3 8 #"measure2"
0 0 24 3 1 #" "
0 0 14 3 4 #"fun1"
0 0 24 3 1 #" "
0 0 14 3 4 #"fun2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"element1"
0 0 24 3 2 #") "
0 0 14 3 11 #"BULLET-SIDE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fun2"
0 0 24 3 1 #" "
0 0 14 3 8 #"element2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 8 #"measure1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 8 #"element1"
0 0 24 3 2 #") "
0 0 14 3 11 #"BULLET-SIDE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fun2"
0 0 24 3 1 #" "
0 0 14 3 8 #"element2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 8 #"measure1"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"element1"
0 0 24 3 2 #") "
0 0 14 3 11 #"BULLET-SIDE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fun1"
0 0 24 3 1 #" "
0 0 14 3 8 #"element2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 8 #"measure2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 8 #"element1"
0 0 24 3 2 #") "
0 0 14 3 11 #"BULLET-SIDE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"-"
0 0 24 3 2 #" ("
0 0 14 3 4 #"fun1"
0 0 24 3 1 #" "
0 0 14 3 8 #"element2"
0 0 24 3 3 #") ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 8 #"measure2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; any-invader-hit?: Sbullet Invader -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; GIVEN: a spaceship and an invader"
0 0 24 29 1 #"\n"
0 0 17 3 71
(
 #";; RETURN: true if the invader is hit by the spaceship, otherwise fa"
 #"lse"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"any-invader-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"general-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 14 3 9 #"invader-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"invader-y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"any-invader-hit?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 14 3 8 #"INVADER9"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";; invader-hit?: Sbullet LoI -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; GIVEN: a spaceship bullet and a list of invaders"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURN: true if the spaceship bullet hits any of the invaders; ot"
 #"herwise"
) 0 0 24 29 1 #"\n"
0 0 17 3 16 #";          false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invader-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 16 #"any-invader-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invader-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invader-hit?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invader-hit?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";; invader-hitted?: LoSB Invader -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; GIVEN: a list of spaceship bullets and a invader"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; RETURN: true if the invader is hitted by any of the bullet in the"
 #" LoSB,"
) 0 0 24 29 1 #"\n"
0 0 17 3 26 #";;         otherwise false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"invader-hitted?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 16 #"any-invader-hit?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 14 3 7 #"invader"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 15 #"invader-hitted?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 14 3 7 #"invader"
0 0 24 3 6 #")])]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 3 #"  ("
0 0 14 3 15 #"invader-hitted?"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 9 #"INVADER20"
0 0 24 3 2 #") "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"invader-hitted?"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 9 #"INVADER20"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"invader-hitted?"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"INVADER20"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; invader-remain: LoSB LoI -> LoI"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; GIVEN: a list of spaceship bullets and a list of invaders"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; RETURN: a updated list of invaders in which all the killed invade"
 #"rs are"
) 0 0 24 29 1 #"\n"
0 0 17 3 19 #";;         removed."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"invader-remain"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 15 #"invader-hitted?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 14 #"invader-remain"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #") ("
0 0 14 3 14 #"invader-remain"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 8 #")))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"invader-remain"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 3 1 #" "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"21"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"22"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"23"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"26"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"28"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"29"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"31"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"32"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"33"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"34"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"35"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"invader-remain"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"21"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"22"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"23"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"26"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"28"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"29"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"31"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"32"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"33"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"34"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"35"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"invader-remain"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"21"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"22"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"23"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"26"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"28"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"29"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"31"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"32"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"33"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"34"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"35"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; ship-x: Ship -> Integer"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; GIVEN: a spaceship"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; RETURN: the x posn of the ship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ship-x"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 6 #"posn-x"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 9 #";;;;Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ship-x"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 2 #") "
0 0 21 3 3 #"250"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";; ship-y: Ship -> Integer"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 21 #";; GIVEN: a spaceship"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; RETURN: the y posn of the ship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ship-y"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 6 #"ship-y"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 2 #") "
0 0 21 3 3 #"500"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; ship-hit?: Ibullet Ship -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; GIVEN: a invader bullet and a spaceship"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; RETURN: true if the ship is hit by the invader bullet; otherwise "
 #"false"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"ibullet"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"general-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"ibullet"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #" "
0 0 14 3 11 #"SHIP-HEIGHT"
0 0 24 3 1 #" "
0 0 14 3 10 #"SHIP-WIDTH"
0 0 24 3 1 #" "
0 0 14 3 6 #"ship-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"ship-y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-hit?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";; ship-hitted?: LoIB Ship -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; GIVEN: a list of invader bullets and a spaceship"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; RETURN: true if the spaceship is hit by any of the bullets in the"
 #" list"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ship-hitted?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 3 #") ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 9 #"ship-hit?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 2 #") "
0 0 14 3 4 #"ship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"ship-hitted?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 2 #") "
0 0 14 3 4 #"ship"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"ship-hitted?"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOIB-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";;> Use filter on sbullets-out and ibullets-out."
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; sbullets-out: LoSB LoI -> LoSB"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; GIVEN: a list of spaceship bullets and a list of invaders"
0 0 24 29 1 #"\n"
0 0 17 3 77
(
 #";; RETURN: a new list of spaceship bullets in which out-of-bounds bu"
 #"llets and"
) 0 0 24 29 1 #"\n"
0 0 17 3 43 #";;         hit-invaders bullets are removed"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"sbullets-out"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 18 #"posn-out-of-bounds"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 12 #"invader-hit?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 14 3 3 #"loi"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"sbullets-out"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 14 3 3 #"loi"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #")("
0 0 14 3 12 #"sbullets-out"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 14 3 3 #"loi"
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"sbullets-out"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"sbullets-out"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")) "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"sbullets-out"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 3 1 #" "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; ibullets-out: LoIB -> LoIB"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 36 #";; GIVEN: a list of invader bullets "
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; RETURN: a new list of ship bullets in which out of bounds bullets"
 #" have been"
) 0 0 24 29 1 #"\n"
0 0 17 3 21 #";;         moved away"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ibullets-out"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 18 #"posn-out-of-bounds"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 12 #"ibullets-out"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 2 #")("
0 0 14 3 12 #"ibullets-out"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 8 #")))])]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"ibullets-out"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"ibullets-out"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOIB-INIT"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 24 3 3 #"())"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; remove-hits-and-out-of-bounds: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; GIVEN: the current world"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; RETURN: a new world where"
0 0 24 29 1 #"\n"
0 0 17 3 64
#";; remove any invaders that have been hit by a spaceship bullet."
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; Remove any bullets that are out of bounds"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 24 #";;;; Function Definition"
0 0 24 29 1 #"\n"
0 0 17 3 80
(
 #";;; and mother ships ;;> Looks like this part belonged to your RETUR"
 #"N statement."
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 28 #"remove-hits-and-out-of-bound"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 14 #"invader-remain"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #") ("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"sbullets-out"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #")("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"ibullets-out"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-loib"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 12 #"world-moship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"world-tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"world-life"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 3 #"  ("
0 0 14 3 28 #"remove-hits-and-out-of-bound"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"21"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"22"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"23"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"26"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"28"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"29"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"31"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"32"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"33"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"34"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"35"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"-70"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 15 #";;;; Signature:"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; live-count: Life LoIB Ship LoSB Moship-> NonNegInteger "
0 0 24 29 1 #"\n"
0 0 17 3 4 #";;> "
0 0 17 3 69
(
 #"Function name inconsistent between signature and function definition"
 #"."
) 0 0 24 29 1 #"\n"
0 0 17 3 32 #";;> live-count vs life-count. -1"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";;> Also, it should return a \"Life\" instead of a NonNegInteger bec"
 #"ause that"
) 0 0 24 29 1 #"\n"
0 0 17 3 31 #";;> is what you're updating. -1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";; GIVEN: the remaining life, a list of invader bullets, a spaceship"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";;        a list of spaceship bullets and a mother ship"
0 0 24 29 1 #"\n"
0 0 17 3 65
#";; WHERE: if the spaceship hit the mothership, it gains one life;"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;        if the spaceship is hit by an invader, it looses one life "
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; RETURN: the reamining life"
0 0 24 29 1 #"\n"
0 0 17 3 30 #";;> Spelling: \"loses one life\""
0 0 24 29 1 #"\n"
0 0 17 3 21 #";;> Typo: \"reamining\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"life-count"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 12 #"ship-hitted?"
0 0 24 3 1 #" "
0 0 14 3 4 #"loib"
0 0 24 3 1 #" "
0 0 14 3 4 #"ship"
0 0 24 3 3 #") ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #" )]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 11 #"moship-hit?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 4 #"life"
0 0 24 3 5 #"])]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"life-count"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOIB-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"life-count"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"11"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 3 1 #" "
0 0 14 3 15 #"MOTHERSHIP-INIT"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 10 #"life-count"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOIB-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"SHIP-INIT"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 3 1 #" "
0 0 14 3 15 #"MOTHERSHIP-INIT"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";; (moship-move: Moship -> Moship"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;> Typo: \"(moship\""
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";; GIVEN: a mother ship"
0 0 24 29 1 #"\n"
0 0 17 3 79
(
 #";; RETURN: a new mother ship which has moved right SPEED distance fr"
 #"om original"
) 0 0 24 29 1 #"\n"
0 0 17 3 18 #";;        position"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"moship-move"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 2 #" ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 14 3 5 #"SPEED"
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 4 #")) ("
0 0 14 3 6 #"posn-y"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"moship-move"
0 0 24 3 1 #" "
0 0 14 3 15 #"MOTHERSHIP-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"-60"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";;> Missing test: mothership is at right edge of canvas and moves ri"
 #"ght. -1"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; moship-reappear-move: Moship -> Moship"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; GIVEN: a list of spaceship bullets and a mothership "
0 0 24 29 1 #"\n"
0 0 17 3 81
(
 #";; WHERE: if the mother ship is hit, it reappears at the cennter bot"
 #"tom of canvas"
) 0 0 24 29 1 #"\n"
0 0 17 3 42 #";;        canvas if not, it keeps removing"
0 0 24 29 1 #"\n"
0 0 17 3 85
(
 #";;> Typos: \"cennter\", also \"it keeps removing\" doesn't make sens"
 #"e. Meant \"moving\"? -1"
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";; RETURN: the mothership at new postion"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 20 #"moship-reappear-move"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 11 #"moship-hit?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 3 #") ("
0 0 14 3 18 #"posn-out-of-bounds"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 4 #"))  "
0 0 14 3 11 #"MO-REAPPEAR"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 11 #"moship-move"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"moship-reappear-move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"moship-reappear-move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"20"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"moship-reappear-move"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 3 1 #" "
0 0 14 3 15 #"MOTHERSHIP-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 20 #"moship-reappear-move"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; hit-mothership?: Sbullet Moship -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; GIVEN: a list of spaceship bullets and a mother ship"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; RETURN: true if the mother ship is hit by the bullet, otherwise f"
 #"alse"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hit-mothership?"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 4 #"   ("
0 0 14 3 12 #"general-hit?"
0 0 24 3 1 #" "
0 0 14 3 7 #"sbullet"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 14 3 6 #"posn-x"
0 0 24 3 1 #" "
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hit-mothership?"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 15 #"hit-mothership?"
0 0 24 3 3 #"  ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #") ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";;> A more realistic test for hitting the mothership is when circle "
 #"of bullet image"
) 0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";;> touches edge of mothership image, not when their posns are exact"
 #"ly the same. -1"
) 0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";;> You did update your posn-out-of-bounds function to meet that sta"
 #"ndard,"
) 0 0 24 29 1 #"\n"
0 0 17 3 7 #";;> but"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"test"
0 0 17 3 13 #" also should."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 38 #";; moship-hit?: LoSB Moship -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 55 #";; GIVEN: a list of spaceship bullets and a mother ship"
0 0 24 29 1 #"\n"
0 0 17 3 73
(
 #";; RETURN: true if the mother ship is hit by sany bullet, otherwise "
 #"false"
) 0 0 24 29 1 #"\n"
0 0 17 3 17 #";;> Typo - \"sany\""
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"moship-hit?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 3 #") ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 15 #"hit-mothership?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 14 3 6 #"moship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"moship-hit?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 2 #") "
0 0 14 3 6 #"moship"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 26 #";;> Missed HOF: or-map. -1"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"moship-hit?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"moship-hit?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; bonus-score: LoSB Moship -> NonNegInteger "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 54 #";; GIVEN: a list of spaceship bullets and a mothership"
0 0 24 29 1 #"\n"
0 0 17 3 75
(
 #";; RETURN: BONUS score if the mothership is hit by the bullets, othe"
 #"rwise 0"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bonus-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 11 #"moship-hit?"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 2 #") "
0 0 14 3 5 #"BONUS"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bonus-score"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"bonus-score"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 4 #")) ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 3 #")) "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; score-acc: LoSB Score Moship LoI -> NonNegInteger"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; GIVEN: a list of spaceship bullets, current score, a mother ship,"
 #" and"
) 0 0 24 29 1 #"\n"
0 0 17 3 28 #";;        a list of invaders"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; RETURN: the updated score"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"score-acc"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"score"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 48 #";; invader-kill-count: LoSB LoI -> NonNegInteger"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 60
#";; GIVEN: a list of spaceship bullets and a list of invaders"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 46 #";; RETURN: the remaining numbers on the canvas"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 18 #"invader-kill-count"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 14 #"TOTAL-INVADERS"
0 0 24 3 2 #" ("
0 0 14 3 6 #"length"
0 0 24 3 2 #" ("
0 0 14 3 14 #"invader-remain"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 14 #")))))         "
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 1 #"*"
0 0 24 3 1 #" "
0 0 14 3 14 #"SOCORE-INVADER"
0 0 24 3 2 #" ("
0 0 14 3 18 #"invader-kill-count"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"bonus-score"
0 0 24 3 1 #" "
0 0 14 3 4 #"losb"
0 0 24 3 1 #" "
0 0 14 3 6 #"moship"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"score-acc"
0 0 24 3 1 #" "
0 0 14 3 9 #"LOSB-INIT"
0 0 24 3 1 #" "
0 0 14 3 10 #"SCORE-INIT"
0 0 24 3 1 #" "
0 0 14 3 15 #"MOTHERSHIP-INIT"
0 0 24 3 1 #" "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;> Missing tests: score when you kill some invaders plus mothership"
 #","
) 0 0 24 29 1 #"\n"
0 0 17 3 40 #";;> score when you kill all invaders. -2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 34 #";; any-touch-line?: LoI -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";; GIVEN: a list of invaders"
0 0 24 29 1 #"\n"
0 0 17 3 56
#";; RETURN: true if any invader touches the \"death line\";"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;        otherwise false"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-touch-line?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"local"
0 0 24 3 2 #" ("
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 34 #";; touch-line?: Invader -> Boolean"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 20 #";; GIVEN: an invader"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 56
#";; RETURN: true if the invader touches the \"death line\";"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"          "
0 0 17 3 25 #";;        otherwise false"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"touch-line?"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"              [("
0 0 14 3 2 #">="
0 0 24 3 2 #" ("
0 0 14 3 6 #"posn-y"
0 0 24 3 2 #" ("
0 0 14 3 12 #"invader-posn"
0 0 24 3 1 #" "
0 0 14 3 7 #"invader"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 1 #"-"
0 0 24 3 1 #" "
0 0 14 3 5 #"WIDTH"
0 0 24 3 1 #" "
0 0 14 3 11 #"SHIP-HEIGHT"
0 0 24 3 2 #" ("
0 0 14 3 1 #"/"
0 0 24 3 1 #" "
0 0 14 3 12 #"INVADER-SIDE"
0 0 24 3 1 #" "
0 0 21 3 1 #"2"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 6 #"#false"
0 0 24 3 5 #"]))) "
0 0 17 3 24 #";;> -1, unnecessary code"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"       [("
0 0 14 3 11 #"touch-line?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 3 #")) "
0 0 21 3 5 #"#true"
0 0 24 3 2 #"] "
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-touch-line?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 3 #"loi"
0 0 24 3 8 #"))])])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;> well done on the nested cond."
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;> missed HOF though: or-map. -1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-touch-line?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))) "
0 0 21 3 5 #"#true"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 1 #"("
0 0 14 3 15 #"any-touch-line?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 4 #"))) "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-touch-line?"
0 0 24 3 1 #" "
0 0 14 3 8 #"LOI-INIT"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 84
(
 #";;> OK test coverage here but the tests should use a list of more th"
 #"an 1 invader. -1"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; ticking: Tick -> Positive Integer ;;> PosInt"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 12 #";;;; Purpose"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; GIVEN: a tick"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";; RETURN: a new tick after adding 1 to it"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ticking"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 3 1 #" "
0 0 14 3 4 #"tick"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 7 #"ticking"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";;;; Signature"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";; world-step: World -> World"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";; GIVEN: the current world"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; RETURNS: the next world after one clock tick"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-step"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 28 #"remove-hits-and-out-of-bound"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 18 #"ship-reappear-move"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-loib"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 13 #"invaders-move"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #") ("
0 0 14 3 10 #"world-tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 22 #"move-spaceship-bullets"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 10 #"world-losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 20 #"move-invader-bullets"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 13 #"invaders-fire"
0 0 24 3 2 #" ("
0 0 14 3 13 #"invaders-move"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 10 #"world-tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 10 #"world-loib"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 20 #"moship-reappear-move"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #") ("
0 0 14 3 12 #"world-moship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 7 #"ticking"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 10 #"life-count"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-life"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"world-loib"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"world-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 10 #"world-losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 12 #"world-moship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 9 #"score-acc"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 12 #"world-moship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; key-handler : World Key-Event -> World"
0 0 24 29 1 #"\n"
0 0 17 3 74
(
 #";; RETURNS: a new world with direction updated according to the key "
 #"event."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"left\""
0 0 24 3 3 #") ("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 7 #"\"right\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ship"
0 0 24 3 2 #" ("
0 0 14 3 14 #"string->symbol"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 3 #") ("
0 0 14 3 9 #"ship-posn"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"world-losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"world-loib"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 12 #"world-moship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"world-tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 10 #"world-life"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"key=?"
0 0 24 3 1 #" "
0 0 14 3 2 #"ke"
0 0 24 3 1 #" "
0 0 19 3 3 #"\" \""
0 0 24 3 4 #")  ("
0 0 14 3 10 #"make-world"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 33 #")                                "
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 9 #"ship-fire"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-losb"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 10 #"world-ship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"world-loib"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 12 #"world-moship"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"world-tick"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 10 #"world-life"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 11 #"world-score"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";;> Missing tests:"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;> Left key pressed, right key pressed,"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;> spacebar pressed, any other key pressed. -4"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #";;;; the test is very likely to fail because there is no exact answe"
 #"r as the"
) 0 0 24 29 1 #"\n"
0 0 17 3 25 #";;    game is continuing."
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"world-step"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD-INIT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-ship"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"right"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"260"
0 0 24 3 1 #" "
0 0 21 3 3 #"500"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"3"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"4"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"6"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"7"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 2 #"70"
0 0 24 3 2 #") "
0 0 21 3 1 #"8"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 1 #"9"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"10"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"11"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"12"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"13"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"14"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"16"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"120"
0 0 24 3 2 #") "
0 0 21 3 2 #"17"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"18"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"19"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"20"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"21"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"22"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"23"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"24"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"25"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"170"
0 0 24 3 2 #") "
0 0 21 3 2 #"26"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"27"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"28"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"29"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"30"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"250"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"31"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"32"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"33"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"400"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"34"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 12 #"make-invader"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"450"
0 0 24 3 1 #" "
0 0 21 3 3 #"220"
0 0 24 3 2 #") "
0 0 21 3 2 #"35"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 2 #"()"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 3 #"350"
0 0 24 3 1 #" "
0 0 21 3 2 #"80"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 24 3 1 #" "
0 0 21 3 2 #"10"
0 0 24 3 1 #" "
0 0 21 3 2 #"40"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"3"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";; end-game? : World -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 72
(
 #";; RETURNS: true if one of the condition that end the game has been "
 #"met,"
) 0 0 24 29 1 #"\n"
0 0 17 3 27 #";;          false otherwise"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;;; Function Definition:"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"end-game?"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 6 #"empty?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ("
0 0 14 3 10 #"world-life"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 15 #"any-touch-line?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"world-loi"
0 0 24 3 1 #" "
0 0 14 3 5 #"world"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;;; Tests"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 9 #"end-game?"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD-INIT"
0 0 24 3 2 #") "
0 0 21 3 6 #"#false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 17 3 83
(
 #";;> Missing tests: won the game by killing all invaders, or by invad"
 #"ers landing. -2"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 24 3 1 #" "
0 0 14 3 10 #"WORLD-INIT"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"to-draw"
0 0 24 3 1 #" "
0 0 14 3 10 #"draw-world"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 7 #"on-tick"
0 0 24 3 1 #" "
0 0 14 3 10 #"world-step"
0 0 24 3 1 #" "
0 0 21 3 4 #"0.15"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"on-key"
0 0 24 3 1 #" "
0 0 14 3 11 #"key-handler"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 9 #"stop-when"
0 0 24 3 1 #" "
0 0 14 3 9 #"end-game?"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
